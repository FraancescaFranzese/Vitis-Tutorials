#
# Copyright (C) 2023, Advanced Micro Devices, Inc. All rights reserved.
# SPDX-License-Identifier: MIT
#
# Author: Faisal El-Shabani

[connectivity]

# ------------------------------------------------------------
# HLS PL Kernels:
# ------------------------------------------------------------

# Sources/Sinks Data Movers to/from LPDDR/PL:
nk = channelizer_dma_src_wrapper:1:dma_src
nk = channelizer_dma_snk_wrapper:1:dma_snk

# ------------------------------------------------------------
# AXI Stream Connections (PL to AIE)
# ------------------------------------------------------------

# LPDDR to PL DMA SOURCE:
sp=dma_src.mem:LPDDR

# PL DMA Source to PL split 
sc = dma_src.sig_o_0:channelizer_split0.sig_i
sc = dma_src.sig_o_1:channelizer_split1.sig_i

# PL merge_8x4 to PL DMA SINK:
sc = channelizer_merge_8x4.sig_o_0:dma_snk.sig_i_0
sc = channelizer_merge_8x4.sig_o_1:dma_snk.sig_i_1
sc = channelizer_merge_8x4.sig_o_2:dma_snk.sig_i_2
sc = channelizer_merge_8x4.sig_o_3:dma_snk.sig_i_3

# PL DMA SINK to LPDDR
sp=dma_snk.mem:LPDDR

# ------------------------------------------------------------
# Clocks
# ------------------------------------------------------------

[clock]

id=2:dma_src.ap_clk,channelizer_split0.ap_clk,channelizer_split1.ap_clk,channelizer_merge0.ap_clk,channelizer_merge1.ap_clk,channelizer_merge2.ap_clk,channelizer_merge3.ap_clk,channelizer_merge4.ap_clk,channelizer_merge5.ap_clk,channelizer_merge6.ap_clk,channelizer_merge7.ap_clk,channelizer_ifft_front_transpose.ap_clk,channelizer_ifft_transpose.ap_clk,channelizer_ifft_back_transpose.ap_clk,channelizer_merge_8x4.ap_clk,dma_snk.ap_clk

# ------------------------------------------------------------
# Vivado PAR
# ------------------------------------------------------------

[vivado]

# ------------------------------------------------------------
# Uncomment to try all the strategies:
# ------------------------------------------------------------

# Below passes with 'Performance_NetDelay_low'

#impl.strategies=Performance_Explore,Performance_ExplorePostRoutePhysOpt,Performance_WLBlockPlacement,Performance_WLBlockPlacementFanoutOpt,Performance_EarlyBlockPlacement,Performance_NetDelay_high,Performance_NetDelay_low,Performance_Retiming,Performance_ExtraTimingOpt,Performance_RefinePlacement,Congestion_SpreadLogic_high,Congestion_SpreadLogic_medium,Congestion_SpreadLogic_low,Area_Explore,Area_ExploreSequential,Area_ExploreWithRemap
#impl.jobs=8

# ------------------------------------------------------------
# Cherry pick a specific set of directives:
# ------------------------------------------------------------

prop=run.impl_1.steps.phys_opt_design.is_enabled=1
prop=run.impl_1.steps.post_route_phys_opt_design.is_enabled=0
prop=run.impl_1.steps.opt_design.args.directive=Explore
prop=run.impl_1.steps.place_design.args.directive=Explore
prop=run.impl_1.{steps.place_design.args.MORE OPTIONS}={-net_delay_weight low}
prop=run.impl_1.steps.phys_opt_design.args.directive=AggressiveExplore
prop=run.impl_1.steps.route_design.args.directive=NoTimingRelaxation

